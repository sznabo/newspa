<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		">

	<!-- 用注解 -->
	<context:annotation-config />
	
	<!-- 定义扫描注解的包 -->
	<context:component-scan base-package="com.boyue.karaoke,com.boyue.spa" />

	<!-- 数据库配置文件位置 -->
	<context:property-placeholder location="classpath:db_config.properties" />

    
    <!-- 配置dbcp数据源 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		initialSize: 初始化连接
		<property name="initialSize" value="10" />
		maxIdle: 最大空闲连接
		<property name="maxIdle" value="10" />
		minIdle: 最小空闲连接
		<property name="minIdle" value="5" />
		maxActive: 最大连接数量
		<property name="maxActive" value="100" />
		removeAbandoned: 是否自动回收超时连接
		<property name="removeAbandoned" value="true" />
		removeAbandonedTimeout: 超时时间(以秒数为单位)
		<property name="removeAbandonedTimeout" value="180" />
		maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒
		<property name="maxWait" value="3000" />

		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>

		
			指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个. 注意:
			设置为true后如果要生效,validationQuery参数必须设置为非空字符串
		
		<property name="testOnBorrow">
			<value>true</value>
		</property>

	</bean> -->
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver">
        </property>
        <property name="jdbcUrl"
            value="jdbc:mysql://localhost:3306/spa?characterEncoding=UTF-8">
        </property>
        <property name="user" value="root"></property>
        <property name="password" value="root"></property>
        <property name="minPoolSize" value="20" />
        <property name="maxPoolSize" value="200" />
        <property name="maxIdleTime" value="30" />
        <property name="acquireIncrement" value="2" />
        <property name="maxStatements" value="200" />
        <property name="initialPoolSize" value="10" />
        <property name="acquireRetryAttempts" value="60" />
        <property name="breakAfterAcquireFailure" value="false" />
        <property name="testConnectionOnCheckout" value="false" />
        <property name="acquireRetryDelay" value="1000" />
        <property name="idleConnectionTestPeriod" value="30"></property>
    </bean>

    <!-- 定义Hibernate的SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 依赖注入上面定义的数据源dataSource -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 注册Hibernate的ORM映射文件 -->
        <property name="mappingLocations"  value="classpath:hbmx/*.hbm.xml" />
        
        <!-- 设置Hibernate的相关属性 -->
        <property name="hibernateProperties">
            <props>
            	<!-- 关闭Hibernate对sql和hql的缓存，避免内存泄漏 -->
            	<prop key="hibernate.generate_statistics">false</prop>
                <!-- 设置Hibernate的数据库方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- 设置Hibernate是否在控制台输出SQL语句，开发调试阶段通常设为true -->
                <prop key="hibernate.show_sql">false</prop>
				<!-- 设置Hibernate一个提交批次中的最大SQL语句数 -->
                <prop key="hibernate.jdbc.batch_size">50</prop>
            </props>
        </property>
        
    </bean>
    

    <!--定义Hibernate的事务管理器HibernateTransactionManager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!-- 依赖注入上面定义的sessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- 装配通用数据库访问类BaseDAOImpl -->
	<bean id="dao" class="com.boyue.framework.BaseDao.BaseDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 方式(1)使用annotation注解方式配置事务 -->
	<!--
		<tx:annotation-driven transaction-manager="transactionManager" />
	-->


	<!-- 方式(2)声明式事务，不用在每个类的方法上面写注解，以一个全局的规则匹配 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceMethodsPointcut"
			expression="execution(* com.boyue.karaoke.service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethodsPointcut" />
	</aop:config>

	<!--
		*********定义mybatis跟事务控制结束*****************************************************************************************************************
	-->
	<!-- 设置定时器定时删除呼叫信息 cron="0 0 0/1 * 1-12 1-7" 意思是每天每1小时去删除信息 -->
	<bean id="delCallingTimeTask" class="com.boyue.karaoke.service.impl.DelCallingTimeTask"/>
	<task:scheduled-tasks>
		<task:scheduled ref="delCallingTimeTask" method="run" cron="0 0 0/1 * 1-12 1-7"/>
	</task:scheduled-tasks>

	<!-- 静态资源
	<import resource="TimerConfig.xml" /> -->
	<import resource="static_resource.xml" />
</beans>